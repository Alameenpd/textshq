import type { Container, ContainerToMainMessage, MainToContainerMessage } from './types';
export default class ChildProcessContainer implements Container {
    private readonly entryPointJSPath;
    private readonly env;
    private cp;
    readonly initPromise: Promise<void>;
    private readonly lockFilePath;
    constructor(entryPointJSPath: string, env: Record<string, string>, dataDirPath: string);
    ensureSingleton(): Promise<void>;
    private init;
    onMessage(handler: (msg: ContainerToMainMessage) => void): void;
    postMessage(msg: MainToContainerMessage): void;
    dispose(): Promise<void>;
}
